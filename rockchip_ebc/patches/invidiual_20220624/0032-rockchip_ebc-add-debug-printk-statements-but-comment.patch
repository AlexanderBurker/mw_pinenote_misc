From e0434586f31db9beb962f8185fd567a1eae4a879 Mon Sep 17 00:00:00 2001
From: Maximilian Weigand <mweigand@mweigand.net>
Date: Wed, 22 Jun 2022 10:19:06 +0200
Subject: [PATCH 32/39] [rockchip_ebc] add debug printk statements but comment
 them out

---
 drivers/gpu/drm/rockchip/rockchip_ebc.c | 28 +++++++++++++++++++++----
 1 file changed, 24 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/rockchip/rockchip_ebc.c b/drivers/gpu/drm/rockchip/rockchip_ebc.c
index d0670d482432..491efd20f2e9 100644
--- a/drivers/gpu/drm/rockchip/rockchip_ebc.c
+++ b/drivers/gpu/drm/rockchip/rockchip_ebc.c
@@ -605,24 +605,32 @@ static bool rockchip_ebc_schedule_area(struct list_head *areas,
 	list_for_each_entry(other, areas, list) {
 		struct drm_rect intersection;
 		u32 other_end;
+		//printk(KERN_INFO "    test other area: %i-%i %i-%i\n", other->clip.x1, other->clip.x2, other->clip.y1, other->clip.y2);
 
 		/* Only consider areas before this one in the list. */
-		if (other == area)
+		if (other == area){
+			//printk(KERN_INFO "        other==area\n");
 			break;
+		}
 
 		/* Skip areas that finish refresh before this area begins. */
 		other_end = other->frame_begin + num_phases;
-		if (other_end <= frame_begin)
+		if (other_end <= frame_begin){
+			//printk(KERN_INFO "        other finishes before: %i %i\n", other_end, frame_begin);
 			continue;
+		}
 
 		/* If there is no collision, the areas are independent. */
 		intersection = area->clip;
-		if (!drm_rect_intersect(&intersection, &other->clip))
+		if (!drm_rect_intersect(&intersection, &other->clip)){
+			//printk(KERN_INFO "        no collision\n");
 			continue;
+		}
 
 		/* If the other area already started, wait until it finishes. */
 		if (other->frame_begin < current_frame) {
 			frame_begin = max(frame_begin, other_end);
+			//printk(KERN_INFO "        other already started, setting to %i\n", frame_begin);
 
 			// so here we would optimally want to split the new area into three
 			// parts that do not overlap with the already-started area, and one
@@ -630,12 +638,15 @@ static bool rockchip_ebc_schedule_area(struct list_head *areas,
 			// later, but the other three should start immediately.
 
 			// if the area is equal to the clip, continue
-			if (drm_rect_equals(&area->clip, &intersection))
+			if (drm_rect_equals(&area->clip, &intersection)){
+				//printk(KERN_INFO "        intersection completely contains area\n");
 				continue;
+			}
 
 			if (try_to_split_area(areas, area, other, split_counter, p_next_area, &intersection))
 			{
 				// let the outer loop delete this area
+				//printk(KERN_INFO "        dropping after trying to split\n");
 				return false;
 			} else {
 				continue;
@@ -649,17 +660,20 @@ static bool rockchip_ebc_schedule_area(struct list_head *areas,
 		if (drm_rect_equals(&area->clip, &intersection)) {
 			drm_dbg(drm, "area %p (" DRM_RECT_FMT ") dropped, inside " DRM_RECT_FMT "\n",
 				area, DRM_RECT_ARG(&area->clip), DRM_RECT_ARG(&other->clip));
+			//printk(KERN_INFO "    dropping\n");
 			return false;
 		}
 
 		/* They do overlap but are are not equal and both not started yet, so
 		 * they can potentially start together */
 		frame_begin = max(frame_begin, other->frame_begin);
+		//printk(KERN_INFO "    setting to: %i\n", frame_begin);
 
 		// try to split, otherwise continue
 		if (try_to_split_area(areas, area, other, split_counter, p_next_area, &intersection))
 		{
 			// let the outer loop delete this area
+			//printk(KERN_INFO "    dropping after trying to split\n");
 			return false;
 		} else {
 			continue;
@@ -667,6 +681,7 @@ static bool rockchip_ebc_schedule_area(struct list_head *areas,
 	}
 
 	area->frame_begin = frame_begin;
+	//printk(KERN_INFO "    area scheduled to start at frame: %i (current: %i)\n", frame_begin, current_frame);
 
 	return true;
 }
@@ -1547,12 +1562,15 @@ static void rockchip_ebc_plane_atomic_update(struct drm_plane *plane,
 	ebc_plane_state = to_ebc_plane_state(plane_state);
 	vaddr = ebc_plane_state->base.data[0].vaddr;
 
+	//printk(KERN_INFO "new fb clips\n");
 	list_for_each_entry_safe(area, next_area, &ebc_plane_state->areas, list) {
 		struct drm_rect *dst_clip = &area->clip;
 		struct drm_rect src_clip = area->clip;
 		int adjust_x1;
 		int adjust_x2;
 		bool clip_changed_fb;
+		//printk(KERN_INFO "    checking from list: (" DRM_RECT_FMT ") \n",
+			/* DRM_RECT_ARG(&area->clip)); */
 
 		/* Convert from plane coordinates to CRTC coordinates. */
 		drm_rect_translate(dst_clip, translate_x, translate_y);
@@ -1611,6 +1629,8 @@ static void rockchip_ebc_plane_atomic_update(struct drm_plane *plane,
 		} else {
 			drm_dbg(plane->dev, "area %p (" DRM_RECT_FMT ") <= (" DRM_RECT_FMT ") blitted\n",
 				area, DRM_RECT_ARG(&area->clip), DRM_RECT_ARG(&src_clip));
+			//printk(KERN_INFO "    adding to list: (" DRM_RECT_FMT ") <= (" DRM_RECT_FMT ") blitted\n",
+				/* DRM_RECT_ARG(&area->clip), DRM_RECT_ARG(&src_clip)); */
 		}
 	}
 
-- 
2.30.2

